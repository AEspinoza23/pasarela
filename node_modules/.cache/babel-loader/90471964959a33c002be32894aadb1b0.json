{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMonthNamesForLocale = getMonthNamesForLocale;\nexports.getNavigatorLanguage = getNavigatorLanguage;\nObject.defineProperty(exports, \"dayjs\", {\n  enumerable: true,\n  get: function get() {\n    return _dayjs[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"cx\", {\n  enumerable: true,\n  get: function get() {\n    return _cx[\"default\"];\n  }\n});\nexports.dates = exports.positions = exports.interval = exports.unitType = exports.getDefaultState = void 0;\n\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\n\nvar _weekOfYear = _interopRequireDefault(require(\"dayjs/plugin/weekOfYear\"));\n\nvar dates = _interopRequireWildcard(require(\"./dates\"));\n\nexports.dates = dates;\n\nvar _cx = _interopRequireDefault(require(\"./cx\"));\n\n_dayjs[\"default\"].extend(_weekOfYear[\"default\"]);\n\nvar unitType = {\n  DAY: \"DAY\",\n  WEEK: \"WEEK\",\n  MONTH: \"MONTH\",\n  QUARTER: \"QUARTER\",\n  YEAR: \"YEAR\"\n};\nexports.unitType = unitType;\nvar interval = {\n  OPEN: \"OPEN\",\n  CLOSED: \"CLOSED\"\n};\nexports.interval = interval;\nvar positions = {\n  LEFT: \"left\",\n  RIGHT: \"right\"\n};\nexports.positions = positions;\n\nfunction getMonthNamesForLocale(locale) {\n  var format = new Intl.DateTimeFormat(locale, {\n    month: \"short\"\n  });\n  var months = [];\n\n  for (var month = 0; month < 12; month++) {\n    var testDate = new Date(Date.UTC(2000, month, 1, 0, 0, 0));\n    months.push(format.format(testDate));\n  }\n\n  return months;\n}\n\nfunction getNavigatorLanguage() {\n  return navigator.languages && navigator.languages.length ? navigator.languages[0] : navigator.userLanguage || navigator.language || navigator.browserLanguage || \"en\";\n}\n\nvar getDefaultState = function getDefaultState() {\n  var calendar = (0, _dayjs[\"default\"])();\n  var startOfWeek = calendar.startOf(\"week\");\n  var endOfWeek = calendar.endOf(\"week\");\n  var startDate = calendar.clone();\n  var endDate = calendar.clone().add(1, \"month\");\n  var range = endDate || startDate;\n  var minDate = calendar.clone().subtract(5, \"year\");\n  var maxDate = calendar.clone().add(5, \"year\");\n  var maxSpan = {\n    years: 5\n  };\n  var autoApply = false;\n  var singleDatePicker = false;\n  var showDropdowns = true;\n  var closedOrOpen = interval.CLOSED;\n  var minYear = calendar.clone().subtract(70, \"year\").format(\"YYYY\");\n  var maxYear = calendar.clone().add(70, \"year\").format(\"YYYY\");\n  var showWeekNumbers = true;\n  var showISOWeekNumbers = false;\n  var showCustomRangeLabel = true;\n  var timePicker = false;\n  var timePicker24Hour = false;\n  var timePickerIncrement = 1;\n  var timePickerSeconds = false;\n  var alwaysShowCalendars = false;\n  var ranges = {};\n  var opens = \"left\";\n  var drops = \"down\";\n  var buttonClasses = \"btn btn-sm\";\n  var applyButtonClasses = \"btn-primary\";\n  var cancelButtonClasses = \"btn-default\";\n\n  var isInvalidDate = function isInvalidDate() {\n    return false;\n  };\n\n  var isCustomDate = function isCustomDate() {\n    return [];\n  };\n\n  var weekLabel = \"W\";\n  var linkedCalendars = true;\n  var weekNames = [];\n\n  for (var s = startOfWeek; s <= endOfWeek;) {\n    weekNames.push(s.format(\"dd\"));\n    s = s.add(1, \"day\");\n  }\n\n  var language = getNavigatorLanguage();\n  var monthNames = getMonthNamesForLocale(language);\n  var sY = parseInt(minYear);\n  var eY = parseInt(maxYear);\n  var yearNames = [];\n\n  for (; sY < eY; sY++) {\n    yearNames.push(sY);\n  }\n\n  var locale = {\n    weekNames: weekNames,\n    language: language,\n    monthNames: monthNames,\n    weekLabel: weekLabel,\n    yearNames: yearNames\n  };\n  return {\n    locale: locale,\n    calendar: calendar,\n    startDate: startDate,\n    endDate: endDate,\n    minDate: minDate,\n    maxDate: maxDate,\n    maxSpan: maxSpan,\n    showDropdowns: showDropdowns,\n    minYear: minYear,\n    maxYear: maxYear,\n    showWeekNumbers: showWeekNumbers,\n    showISOWeekNumbers: showISOWeekNumbers,\n    timePicker: timePicker,\n    timePickerIncrement: timePickerIncrement,\n    timePicker24Hour: timePicker24Hour,\n    timePickerSeconds: timePickerSeconds,\n    ranges: ranges,\n    showCustomRangeLabel: showCustomRangeLabel,\n    alwaysShowCalendars: alwaysShowCalendars,\n    opens: opens,\n    drops: drops,\n    singleDatePicker: singleDatePicker,\n    linkedCalendars: linkedCalendars,\n    buttonClasses: buttonClasses,\n    applyButtonClasses: applyButtonClasses,\n    cancelButtonClasses: cancelButtonClasses,\n    autoApply: autoApply,\n    isInvalidDate: isInvalidDate,\n    isCustomDate: isCustomDate,\n    weekLabel: weekLabel,\n    closedOrOpen: closedOrOpen,\n    range: range\n  };\n};\n\nexports.getDefaultState = getDefaultState;","map":null,"metadata":{},"sourceType":"script"}