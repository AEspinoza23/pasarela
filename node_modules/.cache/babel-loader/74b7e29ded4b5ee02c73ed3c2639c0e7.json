{"ast":null,"code":"import _regeneratorRuntime from \"/home/surnet/src/pasarela_react/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watcherSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerSaga);\n\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport { AIR_AVAIL, DATA_LOADED, API_ERRORED } from '../constants/action-types';\nimport axios from 'axios';\nvar url = \"/Airavailrs\";\nvar datosVuelos = {\n  direct_flight: false,\n  go_info: {\n    origin: \"CCS\",\n    destination: \"PMV\",\n    date: \"2019-11-11\"\n  },\n  back_info: {\n    origin: \"PMV\",\n    destination: \"CCS\",\n    date: \"2019-11-15\"\n  },\n  max_stops: 0,\n  passangers_info: {\n    adt: 1,\n    cnn: 0,\n    inf: 0\n  }\n};\nexport default function watcherSaga() {\n  return _regeneratorRuntime.wrap(function watcherSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(AIR_AVAIL, workerSaga);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction workerSaga() {\n  var payload;\n  return _regeneratorRuntime.wrap(function workerSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(getData);\n\n        case 3:\n          payload = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: DATA_LOADED,\n            payload: payload\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: API_ERRORED,\n            payload: _context2.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction getData() {\n  return axios({\n    method: 'post',\n    url: url,\n    data: datosVuelos,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'R7c2CS4SYUGpyB31afs/TqcWX6Nuw9JrvsNwobyh5me/UoLdL6e0GxVNoqC3k2Zq'\n    }\n  }).then(function (response) {\n    return response.data;\n  });\n}","map":{"version":3,"sources":["/home/surnet/src/pasarela_react/src/redux/sagas/api-sagas.js"],"names":["watcherSaga","workerSaga","takeEvery","call","put","AIR_AVAIL","DATA_LOADED","API_ERRORED","axios","url","datosVuelos","direct_flight","go_info","origin","destination","date","back_info","max_stops","passangers_info","adt","cnn","inf","getData","payload","type","method","data","headers","then","response"],"mappings":";;;;yBA2B0BA,W;;;yBAIhBC,U;;AA/BV,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,2BAApD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,gBAAT;AAEA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,aAAa,EAAE,KADC;AAEhBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,KADD;AAEPC,IAAAA,WAAW,EAAE,KAFN;AAGPC,IAAAA,IAAI,EAAE;AAHC,GAFO;AAOhBC,EAAAA,SAAS,EAAE;AACTH,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,WAAW,EAAE,KAFJ;AAGTC,IAAAA,IAAI,EAAE;AAHG,GAPK;AAYhBE,EAAAA,SAAS,EAAE,CAZK;AAahBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,GAAG,EAAE,CADU;AAEfC,IAAAA,GAAG,EAAE,CAFU;AAGfC,IAAAA,GAAG,EAAE;AAHU;AAbD,CAAlB;AAoBA,eAAe,SAAWrB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,SAAS,CAACG,SAAD,EAAYJ,UAAZ,CAAf;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIf,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEoB,iBAAME,IAAI,CAACmB,OAAD,CAAV;;AAFpB;AAEUC,UAAAA,OAFV;AAAA;AAGI,iBAAMnB,GAAG,CAAC;AAAEoB,YAAAA,IAAI,EAAElB,WAAR;AAAqBiB,YAAAA,OAAO,EAAPA;AAArB,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMnB,GAAG,CAAC;AAAEoB,YAAAA,IAAI,EAAEjB,WAAR;AAAqBgB,YAAAA,OAAO;AAA5B,WAAD,CAAT;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAASD,OAAT,GAAmB;AACjB,SAAOd,KAAK,CAAC;AACXiB,IAAAA,MAAM,EAAE,MADG;AAEXhB,IAAAA,GAAG,EAAEA,GAFM;AAGXiB,IAAAA,IAAI,EAAEhB,WAHK;AAIXiB,IAAAA,OAAO,EAAE;AACP,sBAAe,kBADR;AAC4B,uBAAgB;AAD5C;AAJE,GAAD,CAAL,CAMJC,IANI,CAMC,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACH,IAAb;AAAA,GANT,CAAP;AAOD","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { AIR_AVAIL, DATA_LOADED, API_ERRORED } from '../constants/action-types';\n\nimport axios from 'axios';\n\nconst url = `/Airavailrs`;\n\nlet datosVuelos = {\n  direct_flight: false,\n  go_info: {\n    origin: \"CCS\", \n    destination: \"PMV\", \n    date: \"2019-11-11\"\n  },\n  back_info: {\n    origin: \"PMV\", \n    destination: \"CCS\", \n    date: \"2019-11-15\"\n  }, \n  max_stops: 0,\n  passangers_info: {\n    adt: 1,\n    cnn: 0, \n    inf: 0\n  }\n}\n\nexport default function*  watcherSaga() {\n  yield takeEvery(AIR_AVAIL, workerSaga)\n}\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: DATA_LOADED, payload });\n  } catch (e) {\n    yield put({ type: API_ERRORED, payload: e})\n  }\n}\n\nfunction getData() {\n  return axios({\n    method: 'post',\n    url: url,\n    data: datosVuelos,\n    headers: {\n      'Content-Type':'application/json', 'Authorization':'R7c2CS4SYUGpyB31afs/TqcWX6Nuw9JrvsNwobyh5me/UoLdL6e0GxVNoqC3k2Zq'},\n  }).then(response => response.data)\n}\n"]},"metadata":{},"sourceType":"module"}