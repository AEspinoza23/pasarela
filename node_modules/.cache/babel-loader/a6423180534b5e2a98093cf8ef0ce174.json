{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = cx;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar dates = _interopRequireWildcard(require(\"./dates\"));\n\nfunction cx(props) {\n  var day = props.day,\n      calendar = props.calendar,\n      startDate = props.startDate,\n      endDate = props.endDate,\n      range = props.range,\n      maxDate = props.maxDate,\n      minDate = props.minDate;\n  var weekend = dates.isWeekend(day);\n  var inRange = dates.isBetweenExclusive(startDate, endDate, day) || dates.isBetweenExclusive(startDate, range, day);\n  var isEndDate = endDate && day.format(\"YYYY-MM-DD\") === endDate.format(\"YYYY-MM-DD\");\n  var isStartDate = startDate && day.format(\"YYYY-MM-DD\") === startDate.format(\"YYYY-MM-DD\");\n  var active = isStartDate || isEndDate;\n  var off = calendar.month() !== day.month() || dates.isNotBetween(minDate, maxDate, day);\n  var disabled = dates.isNotBetween(minDate, maxDate, day);\n  var available = !disabled;\n  return (0, _classnames[\"default\"])({\n    weekend: weekend,\n    \"in-range\": inRange,\n    \"end-date\": isEndDate,\n    \"start-date\": isStartDate,\n    active: active,\n    off: off,\n    disabled: disabled,\n    available: available\n  });\n}","map":null,"metadata":{},"sourceType":"script"}