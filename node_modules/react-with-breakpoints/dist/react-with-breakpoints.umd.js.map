{"version":3,"file":"react-with-breakpoints.umd.js","sources":["../src/utils/airbnbBreakpoints.ts","../src/utils/set-should-render.ts","../src/utils/debounce.ts","../src/utils/context.ts","../src/utils/useBreakpoint.ts","../src/BreakpointsProvider.tsx","../src/HideAt.tsx","../src/ShowAt.tsx","../src/withBreakpoints.tsx"],"sourcesContent":["export default {\n  small: 744,\n  medium: 1128,\n  large: 1440,\n  xlarge: Infinity\n}\n","import { BreakpointEdge } from './index'\n\nexport default function(\n  breakpoints: Array<BreakpointEdge> = [],\n  breakpoint = '' as BreakpointEdge,\n  isHideAt: Boolean = true\n) {\n  let shouldRender = true\n  !isHideAt && (shouldRender = false)\n  breakpoints.map(b => {\n    breakpoint === b && (shouldRender = isHideAt ? false : true)\n  })\n  return shouldRender\n}\n","import Timeout = NodeJS.Timeout\n\nconst debounce = (func: Function, interval: number) => {\n  let timeout: Timeout | null\n  return (...args: any) => {\n    const later = () => {\n      timeout = null\n      func.apply(this, args)\n    }\n    clearTimeout(timeout)\n    timeout = setTimeout(later, interval)\n  }\n}\n\nexport default debounce\n","import * as React from 'react'\nimport { Breakpoint } from './breakpoint-types'\n\nconst Context = React.createContext({\n  currentBreakpoint: '' as Breakpoint\n})\n\nexport default Context\n","import * as React from 'react'\nimport { BreakpointEdge, Context, setShouldRender } from './index'\n\nfunction useBreakpoint(breakpoint: BreakpointEdge, isHideAt?: Boolean): Boolean {\n  const { currentBreakpoint } = React.useContext(Context)\n\n  let shouldRender = false\n\n  switch (currentBreakpoint) {\n    case 'small':\n      shouldRender = setShouldRender(\n        ['small', 'mediumAndBelow', 'largeAndBelow'],\n        breakpoint,\n        isHideAt\n      )\n      break\n    case 'medium':\n      shouldRender = setShouldRender(\n        ['medium', 'mediumAndAbove', 'mediumAndBelow', 'largeAndBelow'],\n        breakpoint,\n        isHideAt\n      )\n      break\n    case 'large':\n      shouldRender = setShouldRender(\n        ['mediumAndAbove', 'large', 'largeAndBelow', 'largeAndAbove'],\n        breakpoint,\n        isHideAt\n      )\n      break\n    case 'xlarge':\n      shouldRender = setShouldRender(\n        ['mediumAndAbove', 'largeAndAbove', 'xlarge'],\n        breakpoint,\n        isHideAt\n      )\n      break\n  }\n\n  return shouldRender\n}\n\nexport default useBreakpoint\n","import * as React from 'react'\n\nimport { airbnbBreakpoints, debounce, Context, Breakpoint } from './utils'\n\ntype Breakpoints = {\n  small: number\n  medium: number\n  large: number\n  xlarge: number\n}\n\ninterface BreakpointsProviderProps {\n  breakpoints?: Breakpoints\n  children?: React.ReactNode\n}\n\nconst BreakpointsProvider = ({ breakpoints, children }: BreakpointsProviderProps) => {\n  const [currentBreakpoint, setCurrentBreakpoint] = React.useState('' as Breakpoint)\n\n  React.useLayoutEffect(() => {\n    const debouncedResize = debounce(handleResize, 50)\n\n    window.addEventListener('resize', debouncedResize, { passive: true })\n    handleResize()\n\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n    }\n  }, [])\n\n  const handleResize = () => {\n    const clientWidth = window.innerWidth\n    if (clientWidth < breakpoints.small) {\n      setCurrentBreakpoint('small')\n    } else if (clientWidth < breakpoints.medium) {\n      setCurrentBreakpoint('medium')\n    } else if (clientWidth < breakpoints.large) {\n      setCurrentBreakpoint('large')\n    } else if (clientWidth <= breakpoints.xlarge || clientWidth > breakpoints.xlarge) {\n      setCurrentBreakpoint('xlarge')\n    }\n  }\n\n  return <Context.Provider value={{ currentBreakpoint }}>{children}</Context.Provider>\n}\n\nBreakpointsProvider.defaultProps = {\n  breakpoints: airbnbBreakpoints\n}\n\nBreakpointsProvider.displayName = 'BreakpointsProvider'\n\nexport default BreakpointsProvider\n","import * as React from 'react'\n\nimport { BreakpointEdge, useBreakpoint } from './utils/index'\n\ninterface HideAtProps {\n  breakpoint: BreakpointEdge\n  children?: React.ReactNode\n}\n\n// @ts-ignore\nexport const HideAt: React.FunctionComponent<HideAtProps> = ({ breakpoint, children }) => {\n  const shouldRender = useBreakpoint(breakpoint)\n\n  if (shouldRender) {\n    return children\n  }\n  return null\n}\n\nHideAt.displayName = 'HideAt'\n\nHideAt.defaultProps = {\n  breakpoint: '' as BreakpointEdge,\n  children: null\n}\n\nexport default HideAt\n","import * as React from 'react'\n\nimport { BreakpointEdge, useBreakpoint } from './utils'\n\ninterface ShowAtProps {\n  breakpoint: BreakpointEdge\n  children?: React.ReactNode\n}\n\n// @ts-ignore\nexport const ShowAt: React.FunctionComponent<ShowAtProps> = ({ breakpoint, children }) => {\n  const shouldRender = useBreakpoint(breakpoint, false)\n\n  if (shouldRender) {\n    return children\n  }\n  return null\n}\n\nShowAt.displayName = 'ShowAt'\n\nShowAt.defaultProps = {\n  breakpoint: '' as BreakpointEdge,\n  children: null\n}\n\nexport default ShowAt\n","import * as React from 'react'\n\nimport { Context } from './utils/index'\n\nconst withBreakpoints = WrappedComponent => {\n  const Component = props => (\n    <Context.Consumer>\n      {payload => <WrappedComponent {...props} currentBreakpoint={payload.currentBreakpoint} />}\n    </Context.Consumer>\n  )\n  Component.displayName = `withBreakpoints(${WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'Component'})`\n  return Component\n}\n\nexport default withBreakpoints\n"],"names":["small","medium","large","xlarge","Infinity","breakpoints","breakpoint","isHideAt","shouldRender","map","b","Context","React.createContext","currentBreakpoint","useBreakpoint","setShouldRender","BreakpointsProvider","_a","children","_b","setCurrentBreakpoint","React.useLayoutEffect","func","interval","timeout","debouncedResize","handleResize","_i","args","clearTimeout","setTimeout","apply","window","addEventListener","passive","removeEventListener","clientWidth","innerWidth","React.createElement","Provider","value","defaultProps","airbnbBreakpoints","displayName","HideAt","ShowAt","WrappedComponent","Component","props","Consumer","payload","name"],"mappings":"gPAAe,CACbA,MAAO,IACPC,OAAQ,KACRC,MAAO,KACPC,OAAQC,EAAAA,cCDRC,EACAC,EACAC,gBAFAF,mBACAC,EAAa,iBACbC,MAEA,IAAIC,GAAe,EAKnB,OAJCD,IAAaC,GAAe,GAC7BH,EAAYI,IAAI,SAAAC,GACdJ,IAAeI,IAAMF,GAAeD,KAE/BC,ECZT,ICGMG,EAAUC,gBAAoB,CAClCC,kBAAmB,KCDrB,SAASC,EAAcR,EAA4BC,GACzC,IAEJC,GAAe,EAEnB,0CACE,IAAK,QACHA,EAAeO,EACb,CAAC,QAAS,iBAAkB,iBAC5BT,EACAC,GAEF,MACF,IAAK,SACHC,EAAeO,EACb,CAAC,SAAU,iBAAkB,iBAAkB,iBAC/CT,EACAC,GAEF,MACF,IAAK,QACHC,EAAeO,EACb,CAAC,iBAAkB,QAAS,gBAAiB,iBAC7CT,EACAC,GAEF,MACF,IAAK,SACHC,EAAeO,EACb,CAAC,iBAAkB,gBAAiB,UACpCT,EACAC,GAKN,OAAOC,ECvBT,IAAMQ,EAAsB,SAACC,OAAEZ,gBAAaa,aACpCC,iBAACN,OAAmBO,OAE1BC,kBAAsB,WACpB,IHlBcC,EAAgBC,EAC5BC,EGiBIC,GHlBQH,EGkBmBI,EHlBHH,EGkBiB,GHhB1C,eAAC,aAAAI,mBAAAA,IAAAC,kBAKNC,aAAaL,GACbA,EAAUM,WALI,WACZN,EAAU,KACVF,EAAKS,aAAYH,IAGSL,KGe5B,OAHAS,OAAOC,iBAAiB,SAAUR,EAAiB,CAAES,SAAS,IAC9DR,IAEO,WACLM,OAAOG,oBAAoB,SAAUV,KAEtC,IAEH,IAAMC,EAAe,WACnB,IAAMU,EAAcJ,OAAOK,WACvBD,EAAc/B,EAAYL,MAC5BoB,EAAqB,SACZgB,EAAc/B,EAAYJ,OACnCmB,EAAqB,UACZgB,EAAc/B,EAAYH,MACnCkB,EAAqB,UACZgB,GAAe/B,EAAYF,QAAUiC,EAAc/B,EAAYF,SACxEiB,EAAqB,WAIzB,OAAOkB,gBAAC3B,EAAQ4B,UAASC,MAAO,CAAE3B,sBAAsBK,IAG1DF,EAAoByB,aAAe,CACjCpC,YAAaqC,GAGf1B,EAAoB2B,YAAc,yOCxCrBC,EAA+C,SAAC3B,OAAEX,eAAYY,aAGzE,OAFqBJ,EAAcR,GAG1BY,EAEF,MAGT0B,EAAOD,YAAc,SAErBC,EAAOH,aAAe,CACpBnC,WAAY,GACZY,SAAU,MCbL,IAAM2B,EAA+C,SAAC5B,OAAEX,eAAYY,aAGzE,OAFqBJ,EAAcR,GAAY,GAGtCY,EAEF,MAGT2B,EAAOF,YAAc,SAErBE,EAAOJ,aAAe,CACpBnC,WAAY,GACZY,SAAU,gDCnBY,SAAA4B,GACtB,IAAMC,EAAY,SAAAC,GAAS,OACzBV,gBAAC3B,EAAQsC,cACN,SAAAC,GAAW,OAAAZ,gBAACQ,OAAqBE,GAAOnC,kBAAmBqC,EAAQrC,wBAMxE,OAHAkC,EAAUJ,YAAc,oBAAmBG,EAAiBH,aAC1DG,EAAiBK,MACjB,iBACKJ"}