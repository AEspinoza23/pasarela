"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var context_1 = __importDefault(require("./context"));
var set_should_render_1 = __importDefault(require("./set-should-render"));
function useBreakpoint(breakpoint, isHideAt) {
    var currentBreakpoint = React.useContext(context_1.default).currentBreakpoint;
    var shouldRender = false;
    switch (currentBreakpoint) {
        case 'small':
            shouldRender = set_should_render_1.default(['small', 'mediumAndBelow', 'largeAndBelow'], breakpoint, isHideAt);
            break;
        case 'medium':
            shouldRender = set_should_render_1.default(['medium', 'mediumAndAbove', 'mediumAndBelow', 'largeAndBelow'], breakpoint, isHideAt);
            break;
        case 'large':
            shouldRender = set_should_render_1.default(['mediumAndAbove', 'large', 'largeAndBelow', 'largeAndAbove'], breakpoint, isHideAt);
            break;
        case 'xlarge':
            shouldRender = set_should_render_1.default(['mediumAndAbove', 'largeAndAbove', 'xlarge'], breakpoint, isHideAt);
            break;
    }
    return shouldRender;
}
exports.default = useBreakpoint;
//# sourceMappingURL=useBreakpoint.js.map